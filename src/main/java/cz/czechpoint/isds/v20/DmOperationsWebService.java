
package cz.czechpoint.isds.v20;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * Eclipse Metro/3.0.2 (RELEASE-3.0.2-4d220c5; 2021-08-02T05:18:16+0000) JAXWS-RI/3.0.2 JAXWS-API/3.0.1 JAXB-RI/3.0.2 JAXB-API/${jaxb-api.version}
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "dmOperationsWebService", targetNamespace = "http://isds.czechpoint.cz/v20", wsdlLocation = "file:/D:/Projects/mvcr/nkod-isds/src/main/resources/wsdl/dm_operations.wsdl")
public class DmOperationsWebService
    extends Service
{

    private final static URL DMOPERATIONSWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException DMOPERATIONSWEBSERVICE_EXCEPTION;
    private final static QName DMOPERATIONSWEBSERVICE_QNAME = new QName("http://isds.czechpoint.cz/v20", "dmOperationsWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/Projects/mvcr/nkod-isds/src/main/resources/wsdl/dm_operations.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        DMOPERATIONSWEBSERVICE_WSDL_LOCATION = url;
        DMOPERATIONSWEBSERVICE_EXCEPTION = e;
    }

    public DmOperationsWebService() {
        super(__getWsdlLocation(), DMOPERATIONSWEBSERVICE_QNAME);
    }

    public DmOperationsWebService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DMOPERATIONSWEBSERVICE_QNAME, features);
    }

    public DmOperationsWebService(URL wsdlLocation) {
        super(wsdlLocation, DMOPERATIONSWEBSERVICE_QNAME);
    }

    public DmOperationsWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DMOPERATIONSWEBSERVICE_QNAME, features);
    }

    public DmOperationsWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DmOperationsWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns DmOperationsPortType
     */
    @WebEndpoint(name = "dmOperationsPortType")
    public DmOperationsPortType getDmOperationsPortType() {
        return super.getPort(new QName("http://isds.czechpoint.cz/v20", "dmOperationsPortType"), DmOperationsPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DmOperationsPortType
     */
    @WebEndpoint(name = "dmOperationsPortType")
    public DmOperationsPortType getDmOperationsPortType(WebServiceFeature... features) {
        return super.getPort(new QName("http://isds.czechpoint.cz/v20", "dmOperationsPortType"), DmOperationsPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DMOPERATIONSWEBSERVICE_EXCEPTION!= null) {
            throw DMOPERATIONSWEBSERVICE_EXCEPTION;
        }
        return DMOPERATIONSWEBSERVICE_WSDL_LOCATION;
    }

}
